graph = {1:[2,9],2:[1,3],3:[2,4,11],4:[3,5],5:[4,6,13],6:[5,7],7:[6,15],8:[9,18],9:[1,8,10],10:[9,11,20],11:[3,10,12],12:[11,13,22],
         13:[5,12,14],14:[13,15,24],15:[7,14,16],16:[15,26],17:[18,28],18:[8,17,19],19:[18,20,30],20:[10,19,21],21:[20,22,32],
         22:[12,21,23],23:[22,24,34],24:[14,23,25],25:[24,26,36],26:[16,25,27],27:[26,38],28:[17,29],29:[28,30,39],30:[19,29,31],
         31:[30,32,41],32:[21,31,33],33:[32,34,43],34:[23,33,35],35:[34,36,45],36:[25,35,37],37:[36,38,47],38:[27,37],39:[29,40],
         40:[39,41,48],41:[31,40,42],42:[41,43,50],43:[33,42,44],44:[43,45,52],45:[35,44,46],46:[45,47,54],47:[37,46],48:[40,49],
         49:[48,50],50:[42,49,51],51:[50,52],52:[44,51,53],53:[52,54],54:[46,53]}

road_map = {(1, 2):[(2,3),(1, 9)],(1, 9):[(1, 2),(8, 9),(9, 10)],(10, 11):[(11, 12),(10, 20)],
            (10, 20):[(9, 10),(10, 11),(20, 21),(19,20)],(11, 12):[(3, 11),(10, 11),(12, 13),(12, 22)],
            (12, 13):[(11, 12),(5, 13),(13, 14),(12, 22)],(12, 22):[(11, 12),(12, 13),(21, 22),(22, 23)],
            (13, 14):[(12, 13),(14, 15),(14, 24),(5, 13)],(14, 15):[(14, 24),(13, 14),(7, 15),(15, 16)],
            (14, 24):[(14, 15),(13, 14),(23, 24),(24, 25)],(15, 16):[(14, 15),(7, 15),(16, 26)],
            (16, 26):[(15, 16),(25, 26),(26, 27)],(17, 18):[(8, 18),(18, 19),(17, 28)],(17, 28):[(17, 18),(28, 29)],
            (18, 19):[(8, 18),(17, 18),(19, 30),(19, 20)],(19, 20):[(18, 19),(19, 30),(20, 21),(10, 20)],
            (19, 30):[(18, 19),(19, 20),(29, 30),(30, 31)],(2, 3):[(1, 2),(3, 4),(3, 11)],
            (20, 21):[(21, 22),(21, 32),(19, 20),(10, 20)],(21, 22):[(20, 21),(21, 32),(12, 22),(22, 23)],
            (21, 32):[(20, 21),(21, 22),(31, 32),(32, 33)],(22, 23):[(21, 22),(12, 22),(23, 24),(23, 34)],
            (23, 24):[(22, 23),(23, 34),(14, 24),(24, 25)],(23, 34):[(22, 23),(23, 24),(33, 34),(34, 35)],
            (24, 25):[(14, 24),(23, 24),(25, 26),(25, 36)],(25, 26):[(24, 25),(25, 36),(16, 26),(26, 27)],
            (25, 36):[(24, 25),(25, 26),(35, 36),(36, 37)],(26, 27):[(16, 26),(25, 26),(27, 38)],
            (27, 38):[(26, 27),(37, 38)],(28, 29):[(17, 28),(29, 30),(29, 39)],(29, 30):[(28, 29),(29, 39),(19, 30),(30, 31)],
            (29, 39):[(28, 29),(29, 30),(39, 40)],(3, 11):[(2, 3),(3, 4),(10, 11),(11, 12)],
            (3, 4):[(2, 3),(3, 11),(4, 5)],(30, 31):[(19, 30),(29, 30),(31, 32),(31, 41)],
            (31, 32):[(30, 31),(31, 41),(21, 32),(32, 33)],(31, 41):[(30, 31),(31, 32),(40, 41),(41, 42)],
            (32, 33):[(21, 32),(31, 32),(33, 34),(33, 43)],(33, 34):[(32, 33),(33, 43),(23, 34),(34, 35)],
            (33, 43):[(32, 33),(33, 34),(42, 43),(43, 44)],(34, 35):[(33, 34),(23, 34),(35, 36),(35, 45)],
            (35, 36):[(34, 35),(35, 45),(25, 36),(36, 37)],(35, 45):[(34, 35),(35, 36),(44, 45),(45, 46)],
            (36, 37):[(25, 36),(35, 36),(37, 38),(37, 47)],(37, 38):[(36, 37),(37, 47),(27, 38)],
            (37, 47):[(36, 37),(37, 38),(46, 47)],(39, 40):[(29, 39),(40, 41),(40, 48)],
            (4, 5):[(3, 4),(5, 6),(5, 13)],(40, 41):[(39, 40),(40, 48),(31, 41),(41, 42)],
            (40, 48):[(39, 40),(40, 41),(48, 49)],(41, 42):[(31, 41),(40, 41),(42, 43),(42, 50)],
            (42, 43):[(41, 42),(42, 50),(33, 43),(43, 44)],(42, 50):[(41, 42),(42, 43),(49, 50),(50, 51)],
            (43, 44):[(33, 43),(42, 43),(44, 45),(44, 52)],(44, 45):[(43, 44),(44, 52),(35, 45),(45, 46)],
            (44, 52):[(43, 44),(44, 45),(51, 52),(52, 53)],(45, 46):[(35, 45),(44, 45),(46, 47),(46, 54)],
            (46, 47):[(45, 46),(46, 54),(37, 47)],(46, 54):[(45, 46),(46, 47),(53, 54)],(48, 49):[(40, 48),(49, 50)],
            (49, 50):[(48, 49),(42, 50),(50, 51)],(5, 13):[(4, 5),(5, 6),(12, 13),(13, 14)],
            (5, 6):[(4, 5),(5, 13),(6, 7)],(50, 51):[(42, 50),(49, 50),(51, 52)],(51, 52):[(50, 51),(44, 52),(52, 53)],
            (52, 53):[(44, 52),(51, 52),(53, 54)],(53, 54):[(52, 53),(46, 54)],(6, 7):[(5, 6),(7, 15)],
            (7, 15):[(6, 7),(14, 15),(15, 16)],(8, 18):[(8, 9),(17, 18),(18, 19)],(8, 9):[(1, 9),(9, 10),(8, 18)],
            (9, 10):[(1, 9),(8, 9),(10, 11),(10, 20)]}


def find_path(graph, start, end, path=[]):
        path = path + [start]
        if start == end:
            return path
        if not graph.has_key(start):
            return None
        for node in graph[start]:
            if node not in path:
                newpath = find_path(graph, node, end, path)
                if newpath: return newpath
        return None

def find_shortest_path(graph, start, end, path=[]):
        path = path + [start]
        if start == end:
            return path
        if not graph.has_key(start):
            return None
        shortest = None
        for node in graph[start]:
            if node not in path:
                newpath = find_shortest_path(graph, node, end, path)
                if newpath:
                    if not shortest or len(newpath) < len(shortest):
                        shortest = newpath
        return shortest

def find_longest_path(graph, start, end, path=[]):
        path = path + [start]
        if start == end:
            return path
        if not graph.has_key(start):
            return None
        longest = None
        for node in graph[start]:
            if node not in path:
                newpath = find_longest_path(graph, node, end, path)
                if newpath:
                    if not longest or len(newpath) > len(longest):
                        longest = newpath
        return longest

Edwin = [(1,9),(1,2),(2,3),(3,4),(5,13),(13,14),(9,10),(10,11)]
Edwin_graph = {}
for each in Edwin:
    Edwin_graph[each] = road_map[each]

for each in Edwin_graph:
    Edwin_graph[each] = list(set(Edwin_graph[each]) & set(Edwin))
print Edwin_graph

longest_road_list = []
for i in Edwin:
    for e in Edwin:
        d = find_longest_path(Edwin_graph,i,e)
        if d != None:
            longest_road_list.append(len(d))

print max(longest_road_list)
            
            



            
##new_dict = []
##dedup_list = []
##
##for each in graph:
##    for i in graph[each]:
##         new_dict.append([each,i])
##
##for each in new_dict:
##    each.sort()
##
##for each in new_dict:
##    dedup_list.append((each[0],each[1]))
##
##dedup_list = (list(set(dedup_list)))
##for each in dedup_list:
##    print each
